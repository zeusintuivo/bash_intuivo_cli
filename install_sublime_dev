#!/usr/bin/env bash
#
# @author Zeus Intuivo <zeus@intuivo.com>
#
#
# SUDO_USER only exists during execution of sudo
# REF: https://stackoverflow.com/questions/7358611/get-users-home-directory-when-they-run-a-script-as-root
# Global:
THISSCRIPTNAME=`basename "$0"`

load_struct_testing_wget(){
    local provider="$USER_HOME/_/clis/execute_command_intuivo_cli/struct_testing"
    [   -e "${provider}"  ] && source "${provider}"
    [ ! -e "${provider}"  ] && eval """$(wget --quiet --no-check-certificate  https://raw.githubusercontent.com/zeusintuivo/execute_command_intuivo_cli/master/struct_testing -O -  2>/dev/null )"""   # suppress only wget download messages, but keep wget output for variable
    ( ( ! command -v type passed >/dev/null 2>&1; ) && echo -e "\n \n  ERROR! Loading struct_testing \n \n " && exit 69; )
} # end load_struct_testing_wget
load_struct_testing_wget

execute_as_sudo(){
  if [ -z $SUDO_USER ] ; then 
    sudo $THISSCRIPTNAME 
    wait
    exit 0 
  fi
  # REF: http://superuser.com/questions/93385/run-part-of-a-bash-script-as-a-different-user
  # REF: http://superuser.com/questions/195781/sudo-is-there-a-command-to-check-if-i-have-sudo-and-or-how-much-time-is-left
  local CAN_I_RUN_SUDO=$(sudo -n uptime 2>&1|grep "load"|wc -l)
  if [ ${CAN_I_RUN_SUDO} -gt 0 ]; then
    passed "\e[7m*** Installing as sudo...\e[0m"
  else
    failed "Needs to run as sudo ... ${0}"
  fi
}
execute_as_sudo

USER_HOME=$(getent passwd $SUDO_USER | cut -d: -f6)
passed Caller user identified:$USER_HOME


get_lastest_sublime_version() {
    local _sublime_string=$(curl -L https://www.sublimetext.com/3dev  2>/dev/null | sed -n "/<p\ class=\"latest\">/,/<\/div>/p" | head -1)  # suppress only wget download messages, but keep wget output for variable
    local _sublime_build_line=$(echo "${_sublime_string}" | grep 'Build ....')
    if [ -z "${_sublime_build_line}" ] ; then
    {
        echo "error when doing check of line string from website. Got nothing"
        echo "    _sublime_string: <${_sublime_string}>"
        echo "                      0123456789 123456789 123456789 123456789 123456789 123456789 1234567889 123456789 123456789 123456789 123456789 "
        echo "                                1         2         3         4         5         6          7         8         9        10        11"
        echo "_sublime_build_line: <${_sublime_build_line}>"
        failed "Error"
        exit 69;
    }
    else
    {
        local SUBLIMEDEVLASTESTBUILD=$(echo "${_sublime_build_line}" | cut -c42-45)
        wait
        [[ -z "${SUBLIMEDEVLASTESTBUILD}" ]] && failed "Sublime Version not found!"
        echo "${SUBLIMEDEVLASTESTBUILD}"
    }
    fi
}

download_sublime(){
  # sample https://download.sublimetext.com/sublime-text_build-3133_amd64.deb
  # sample https://download.sublimetext.com/sublime_text_3_build_3211_x64.tar.bz2
  # https://download.sublimetext.com/sublime-text-3210-1.x86_64.rpm
  # https://download.sublimetext.com/sublime_text_3_build_3210_x32.tar.bz2
  # https://download.sublimetext.com/sublime_text_3_build_3211_x64.tar.bz2
  local target_url="https://download.sublimetext.com/${1}"
  if ( command -v type wget >/dev/null 2>&1; ) ; then
    wget --directory-prefix="${USER_HOME}/Downloads/" --quiet --no-check-certificate "${target_url}" 2>/dev/null 

    # echo -e "\e[7m*** Downloading file to temp location...\e[0m"
    # # REF: about :> http://unix.stackexchange.com/questions/37507/what-does-do-here
    # :> wgetrc   # here :> equals to Equivalent to the following: cat /dev/null > wgetrc which Nulls out the file called "wgetrc" in the current directory. As in creates an empty file "wgetrc" if one doesn't exist or overwrites one with nothing if it does.
    # echo "noclobber = off" >> wgetrc
    # echo "dir_prefix = ." >> wgetrc
    # echo "dirstruct = off" >> wgetrc
    # echo "verbose = on" >> wgetrc
    # echo "progress = bar:default" >> wgetrc
    # echo "tries = 3" >> wgetrc

    # WGETRC=wgetrc wget --quiet --no-check-certificate "${target_url}" 2>/dev/null   # suppress only wget download messages, but keep wget output for variable
    # echo -e "\e[7m*** Download completed.\e[0m"
    # rm -f wgetrc
  elif ( command -v type curl >/dev/null 2>&1; ); then
    curl -O "${target_url}" 2>/dev/null   # suppress only wget download messages, but keep wget output for variable
  else
    failed "I cannot find wget or curl to download! ${target_url}"
  fi
}

download_install_package_control(){
  # Package Control - The Sublime Text Package Manager: https://sublime.wbond.net
  local target_dir=/opt/sublime_text/Packages/
  local target_dir2=$USER_HOME/.config/sublime-text-3/Installed\ Packages/
  local target_package_name=Package\ Control.sublime-package
  local target_download=$USER_HOME/$target_package_name
  local target_url="https://packagecontrol.io/Package%20Control.sublime-package"
  mkdir -p "${target_dir2}"
  directory_exists "
  ${target_dir}
  "
  directory_exists_with_spaces "${target_dir2}"

  if [ ! -e "${target_dir}" ] ; then
    failed "I cannot find target directory where sublime is installed or Packages folder! ${target_dir}"
  fi
  if ( command -v type wget >/dev/null 2>&1; ) ; then
    wget --directory-prefix="${target_download}" --quiet --no-check-certificate "${target_url}" 2>/dev/null   # suppress only wget download messages, but keep wget output for variable
  elif ( command -v type curl >/dev/null 2>&1; ); then
    curl -o "${target_download}" "${target_url}" 2>/dev/null   # suppress only wget download messages, but keep wget output for variable
  else
    failed "I cannot find wget or curl to download! ${target_url}"
  fi
  directory_exists_with_spaces "${target_download}"

  if [ ! -e "${target_download}" ] ; then
    failed "I cannot find target donwloaded where the Packages was supposed to be! ${target_download}"
  fi

  if it_exists_with_spaces "${target_dir2}/${target_package_name}" ; then
    rm -rf "${target_dir2}/${target_package_name}"
  fi
  sudo cp -R "${target_download}"  "${target_dir2}"

  if it_exists_with_spaces "${target_dir}/${target_package_name}" ; then
    rm -rf "${target_dir}/${target_package_name}"
  fi
  sudo cp -R "${target_download}"  "${target_dir}"
  rm -rf "${target_download}"
}

add_to_applications_list(){
  # Add to applications list
  directory_exists "
  ${USER_HOME}/.local/share/applications/
  /opt/sublime_text/Icon/128x128/
  /usr/share/applications/
  "


  #Creando archivo .desktop
  echo -e "\e[7m*** Creating .desktop file (for easy launch and associate to Sublime Text 3)...\e[0m"
  echo "[Desktop Entry]
  Version=1.0
  Type=Application
  Name=Sublime Text 3 DEV
  GenericName=Text Editor
  Comment=Sophisticated text editor for code, markup and prose
  #Exec=/opt/sublime_text/sublime_text %F
  Exec=sublime-text-3 %F
  Terminal=false
  MimeType=text/plain;text/x-chdr;text/x-csrc;text/x-c++hdr;text/x-c++src;text/x-java;text/x-dsrc;text/x-pascal;text/x-perl;text/x-python;application/x-php;application/x-httpd-php3;application/x-httpd-php4;application/x-httpd-php5;application/xml;text/html;text/css;text/x-sql;text/x-diff;x-directory/normal;inode/directory;
  Icon=sublime-text-3
  Categories=TextEditor;Development;
  StartupNotify=true
  Actions=Window;Document;
  [Desktop Action Window]
  Name=New Window
  Exec=/opt/sublime_text/sublime_text -n
  OnlyShowIn=Unity;
  [Desktop Action Document]
  Name=New File
  Exec=/opt/sublime_text/sublime_text --command new_file
  OnlyShowIn=Unity;" > /usr/share/applications/"Sublime Text 3.desktop"

  cat << EOF > $USER_HOME/.local/share/applications/sublime.desktop
  [Desktop Entry]
  Name=Sublime Text Dev
  Exec=subl %F
  MimeType=text/plain;
  Terminal=false
  Type=Application
  Icon=/opt/sublime_text/Icon/128x128/sublime-text.png
  Categories=Utility;TextEditor;Development;
EOF
}

install_darwin_lastest_sublime_64() {
    local SUBLIMEDEVLASTESTBUILD=$(get_lastest_sublime_version)
    local SUBLIMENAME="Sublime%20Text%20Build%20${SUBLIMEDEVLASTESTBUILD}.dmg"
    local SUBLIMENAME_4_HDUTIL="Sublime Text Build ${SUBLIMEDEVLASTESTBUILD}.dmg"
    wait
    cd ~/Downloads/
    [ ! -e "${SUBLIMENAME_4_HDUTIL}" ] || download_sublime "${SUBLIMENAME}"
    echo "${pwd}"
    echo "${SUBLIMENAME_4_HDUTIL}"
    ls -la "${SUBLIMENAME_4_HDUTIL}"
    wait
    sudo hdiutil attach "${SUBLIMENAME_4_HDUTIL}"
    wait
    sudo cp -R /Volumes/Sublime\ Text/Sublime\ Text.app /Applications/
    wait
    sudo hdiutil detach /Volumes/Sublime\ Text
    wait
} # end install_darwin_lastest_sublime_64

add_to_repo() {
    if  is_not_included "sublime-text" "$(dnf repolist)" ; then
    {
      sudo rpm -v --import https://download.sublimetext.com/sublimehq-rpm-pub.gpg
      # Stable
      # sudo dnf config-manager --add-repo https://download.sublimetext.com/rpm/stable/x86_64/sublime-text.repo
      # Dev
      sudo dnf config-manager --add-repo https://download.sublimetext.com/rpm/dev/x86_64/sublime-text.repo
    }
    fi
}
add_to_repo

install_linux_fedora_lastest_sublime_64() {
    execute_as_sudo
    add_to_repo

    local SUBLIMEDEVLASTESTBUILD=$(get_lastest_sublime_version)
    local SUBLIMEDEVLASTESTBUILD=3211
    echo $SUBLIMEDEVLASTESTBUILD
    local SUBLIMENAME="sublime-text-${SUBLIMEDEVLASTESTBUILD}-1.x86_64.rpm"
    echo $SUBLIMENAME
    wait
    cd $USER_HOME/Downloads/
    if ! it_exists "${SUBLIMENAME}"; then
      download_sublime "${SUBLIMENAME}"
    fi
    wait
    sudo dnf -y install "$USER_HOME/Downloads/${SUBLIMENAME}"

    download_install_package_control
    add_to_applications_list

    file_exists "
    /opt/sublime_text/sublime_text
    "

    wait
    if it_exists "${SUBLIMENAME}"; then
      rm -f "${SUBLIMENAME}"
    fi

    verify_is_installed "subl"

    passed ""
    passed "Sublime Text 3 installed successfully!"
    passed "Run with: subl"
    passed "\e[7m*** That's all. Have fun Sublime Texting ;)\e[0m"

} # end install_linux_fedora_lastest_sublime_64

install_linux_fedora_lastest_sublime_32() {
    execute_as_sudo
    local SUBLIMEDEVLASTESTBUILD=$(get_lastest_sublime_version)
    local SUBLIMENAME="sublime_text_3_build_${SUBLIMEDEVLASTESTBUILD}_x32.tar.bz2"
    wait
    cd $USER_HOME/Downloads/
    download_sublime "${SUBLIMENAME}"
    wait

    if tar -xf "${SUBLIMENAME}" --directory=$USER_HOME; then
      sudo mv $USER_HOME/sublime_text/ /opt/
      sudo ln -s /opt/sublime_text/sublime_text /usr/bin/subl
    fi
    rm "${SUBLIMENAME}"

    download_install_package_control
    add_to_applications_list

    file_exists "
    /opt/sublime_text/sublime_text
    "

    softlink_exists "
    subl>/opt/sublime_text/sublime_text
    "
    wait
    passed ""
    passed "Sublime Text 3 installed successfully!"
    passed "Run with: subl"

} # end install_linux_fedora_lastest_sublime_32

install_linux_ubuntu_lastest_sublime_64() {
    execute_as_sudo
    local SUBLIMEDEVLASTESTBUILD=$(get_lastest_sublime_version)
    echo " version ${SUBLIMEDEVLASTESTBUILD}"
    local SUBLIMENAME="sublime-text_build-${SUBLIMEDEVLASTESTBUILD}_amd64.deb"
    echo " looking for file ${SUBLIMENAME} online"
    wait
    echo "changing to Downloads folder  ~/Downloads/"
    cd ~/Downloads/
    echo "downloading ${SUBLIMENAME}"
    download_sublime "${SUBLIMENAME}"
    wait
    echo "installing "
    sudo dpkg -i ${SUBLIMENAME}
    wait
} # end install_linux_ubuntu_lastest_sublime_64

install_linux_lastest_sublime_32() {
    execute_as_sudo
    local SUBLIMEDEVLASTESTBUILD=$(get_lastest_sublime_version)
    local SUBLIMENAME="sublime-text_build-${SUBLIMEDEVLASTESTBUILD}_i386.deb"
    wait
    cd ~/Downloads/
    download_sublime "${SUBLIMENAME}"
    wait
    sudo dpkg -i ${SUBLIMENAME}
    wait
} # end install_linux_lastest_sublime_32

install_windows_lastest_sublime_64() {
    local SUBLIMEDEVLASTESTBUILD=$(curl -L https://www.sublimetext.com/3dev | sed -n "/<p\ class=\"latest\">/,/<\/div>/p" | head -1 | grep 'Build ....' | cut -c42-45)
    wait
    local SUBLIMENAME="Sublime%20Text%20Build%20${SUBLIMEDEVLASTESTBUILD}%20x64%20Setup.exe"
    wait
    cd $USER_HOMEDIR
    cd Downloads
    curl -O https://download.sublimetext.com/${SUBLIMENAME}
    ${SUBLIMENAME}
    wait
} # end install_windows_lastest_sublime_64

install_windows_lastest_sublime_32() {
    local SUBLIMEDEVLASTESTBUILD=$(curl -L https://www.sublimetext.com/3dev | sed -n "/<p\ class=\"latest\">/,/<\/div>/p" | head -1 | grep 'Build ....' | cut -c42-45)
    wait
    local SUBLIMENAME="Sublime%20Text%20Build%20${SUBLIMEDEVLASTESTBUILD}%20Setup.exe"
    wait
    cd $USER_HOMEDIR
    cd Downloads
    curl -O https://download.sublimetext.com/${SUBLIMENAME}
    ${SUBLIMENAME}
    wait
} # end install_windows_lastest_sublime_32


determine_os_and_fire_action(){
  # check operation systems
  if [[ "$(uname)" == "Darwin" ]] ; then
    # Do something under Mac OS X platform
      [[ "$(uname -m)" == "x86_64" ]] && install_darwin_lastest_sublime_64 "$@"
      [[ "$(uname -m)" == "i686"   ]] && install_darwin_lastest_sublime_64 "$@"
  elif [[ "$(expr substr $(uname -s) 1 5)" == "Linux" ]] ; then
    # Do something under GNU/Linux platform
    # Determine OS platform
    local UNAME=$(uname | tr "[:upper:]" "[:lower:]")
    local DISTRO=""
    # If Linux, try to determine specific distribution
    if [ "$UNAME" == "linux" ]; then
        # If available, use LSB to identify distribution
        if [ -f /etc/lsb-release -o -d /etc/lsb-release.d ]; then
            DISTRO=$(lsb_release -i | cut -d: -f2 | sed s/'^\t'//)
        # Otherwise, use release info file
        else
            DISTRO=$(ls -d /etc/[A-Za-z]*[_-][rv]e[lr]* | grep -v "lsb" | cut -d'/' -f3 | cut -d'-' -f1 | cut -d'_' -f1)
        fi
    fi

    if [[ "$DISTRO" == *"edora"* ]]; then
      {
        [[ "$(uname -i)" == "x86_64" ]] && install_linux_fedora_lastest_sublime_64 "$@"
        [[ "$(uname -i)" == "i686"   ]] && install_linux_fedora_lastest_sublime_32 "$@"
      }
    elif [[ "$DISTRO" == *"untu"* ]]; then
      {
        # ubuntu lsb_release -i | sed 's/Distributor\ ID://g' = \tUbuntu\n
        [[ "$(uname -i)" == "x86_64" ]] && install_linux_ubuntu_lastest_sublime_64 "$@"
        [[ "$(uname -i)" == "i686"   ]] && install_linux_lastest_sublime_32 "$@"
      }
    fi
    # For everything else (or if above failed), just use generic identifier
    unset UNAME
    unset DISTRO

  elif [[ "$(expr substr $(uname -s) 1 10)" == "MINGW32_NT" ]] ; then
    # Do something under Windows NT platform
      [[ "$(uname -i)" == "x86_64" ]] && install_windows_lastest_sublime_64 "$*"
      [[ "$(uname -i)" == "i686"   ]] && install_windows_lastest_sublime_32 "$*"
    install_windows_lastest_sublime_64 "$*"
    # nothing here
  fi
}

determine_os_and_fire_action