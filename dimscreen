#!/bin/bash
#
# @author Zeus Intuivo <zeus@intuivo.com>
#
#
BRIGHTNESS=.7
[[ -n "${1}" ]]  &&  BRIGHTNESS="${1}"

#echo "Scann all connected monitors,   get the first word ls HMD1 -list, then apply brightness to each word passwed from the list"
#echo "xrandr --current --verbose | grep \" connected\" | cut -d\" \" -f1 | xargs -I {} xrandr --output {}   --brightness \"${BRIGHTNESS}\""
function _get_current_brightnesctl_keyboard_device() {
  local  _cb=""
  _cb=$(brightnessctl --list | grep "kbd_backlight" | cut -d\' -f2)
  echo ${_cb}
  return 0
}
function _get_current_brightnessctl_percentage() {
  local -i _cb=0
  _cb=$(brightnessctl | grep "Current" | cut -d'(' -f2 | cut -d')' -f1 | cut -d'%' -f1)
  echo ${_cb}
  return 0
}
function _get_all_active_monitors(){
  local monitors=""
  monitors=$(xrandr --current --verbose | grep " connected"  | cut -d" " -f1)
  echo "${monitors}"
  return 0
} # end _get_all_active_monitors

function _get_percentage_conversion(){
  local -i _b=0
  _b=$(sed 's/\.//g' <<< "${1}")
  # echo $_b
  if [ ${_b} -gt 10 ] && [ ${_b} -lt 100 ]  ; then
  {
    echo ${_b}
    return 0
  }
  fi
  local -i testb=$(( _b * 10 ))
  if [ ${1} == "1" ] ; then
  {
     testb=100
  }
  fi
  # res=$(( _b * 100 ))
  local -i res=${testb}
  if [ ${res} -lt 10 ] ; then
  {
    res=10
  }
  fi
  if [ ${res} -gt 100 ] ; then
  {
    res=100
  }
  fi
  # REF: https://unix.stackexchange.com/questions/526653/control-screen-brightness-in-i3
  # brightnessctl set 20%- down and brightnessctl set +20% up (position of the - and + matter)
  echo ${res}
  return 0
} # end _get_percentage_conversion
function test_get_percentage_conversion(){
  local -i _bright_percentage=""
  _bright_percentage="$(_get_percentage_conversion "${BRIGHTNESS}")"
  echo "_bright_percentage:${_bright_percentage}%"
} # end test_get_percentage_conversion
test_get_percentage_conversion
# exit 0

function _get_day_or_night(){
  # REF: https://unix.stackexchange.com/questions/395933/how-to-check-if-the-current-time-is-between-2300-and-0630
  local currenttime=""
  currenttime=$(date +%H:%M)
  if [[ "${currenttime}" > "06:00" ]] \
  && [[ "${currenttime}" < "11:30" ]]; then
  {
    echo 'day-morgen'
    return 0
  }
  elif [[ "${currenttime}" > "11:29" ]] \
  && [[ "${currenttime}" < "17:30" ]]; then
  {
    echo 'day-mittag'
    return 0
  }
  elif [[ "${currenttime}" > "17:29" ]] \
  && [[ "${currenttime}" < "20:30" ]]; then
  {
    echo 'day-aben'
    return 0
  }
  elif [[ "${currenttime}" > "20:29" ]] \
  && [[ "${currenttime}" < "22:30" ]]; then
  {
    echo 'night-aben'
    return 0
  }
  fi
  echo 'night'
  return 0
} # end _get_day_or_night
function test_get_day_or_night(){
  local _day_or_night=""
  _day_or_night="$(_get_day_or_night)"
  echo "_day_or_night:${_day_or_night}"
} # end test_get_percentage_conversion
test_get_day_or_night

function _set_brightness(){
  # xrandr --current --verbose | grep " connected" \
  #     | cut -d" " -f1 | xargs -I {} xrandr --output {}   --brightness "${BRIGHTNESS}"
  local monitors=""
  monitors="$(_get_all_active_monitors)"
  local -i  _bright_percentage=""
  _bright_percentage="$(_get_percentage_conversion "${BRIGHTNESS}")"
  local _day_or_night=""
  _day_or_night="$(_get_day_or_night)"
  local _current_brightness_percentage=""
  _current_brightness_percentage="$(_get_current_brightnessctl_percentage)"
  _keyboard="$(_get_current_brightnesctl_keyboard_device)"
  echo "_instruction_called:${BRIGHTNESS}"
  echo "_current_brightness_percentag:${_current_brightness_percentage}"
  if (echo "${BRIGHTNESS}" | grep "+" >/dev/null 2>&1; )  ; then
  {
    if [[ "${BRIGHTNESS}" == "+.01" ]] ; then
    {
      _bright_percentage=$(( _current_brightness_percentage + 1 ))
    }
    elif [[ "${BRIGHTNESS}" == "+.05" ]] ; then
    {
      _bright_percentage=$(( _current_brightness_percentage + 5 ))
    }
    else
    {
      _bright_percentage=$(( _current_brightness_percentage +  _bright_percentage ))
    }
    fi
    _bright_percentage="$(_get_percentage_conversion ${_bright_percentage})"
    BRIGHTNESS=".${_bright_percentage}"
    echo "_plus_new_brightness:${_bright_percentage}"
  }
  fi
  if (echo "${BRIGHTNESS}" | grep "-" >/dev/null 2>&1; )  ; then
  {
    if [[ "${BRIGHTNESS}" == "-.01" ]] ; then
    {
      _bright_percentage=$(( _current_brightness_percentage - 1 ))
    }
    elif [[ "${BRIGHTNESS}" == "-.05" ]] ; then
    {
      _bright_percentage=$(( _current_brightness_percentage - 5 ))
    }
    else
    {
      _bright_percentage=$(( _current_brightness_percentage -  _bright_percentage ))
    }
    fi
    _bright_percentage="$(_get_percentage_conversion ${_bright_percentage})"
    BRIGHTNESS=".${_bright_percentage}"
    echo "_minus_new_brightness:${_bright_percentage}"
  }
  fi

  local monitor
  while read -r monitor; do
  {
    [[ -z ${monitor} ]] && continue
    if [[ "${_day_or_night}" == *"day"* ]] ; then
    {
      echo Running Day xrandr --output "${monitor}" --gamma 1:1:1   --brightness "${BRIGHTNESS}"
      xrandr --output "${monitor}" --gamma 1:1:1   --brightness "${BRIGHTNESS}"
    }
    elif [[ "${_day_or_night}" == "night-aben" ]] ; then
    {
      echo Running Night xrandr --output "${monitor}" --gamma 1:1:0.5   --brightness "${BRIGHTNESS}"
      xrandr --output "${monitor}" --gamma 1:1:0.5   --brightness "${BRIGHTNESS}"
    }
    else
    {
      echo Running Night xrandr --output "${monitor}" --gamma 1.0:0.88:0.76  --brightness "${BRIGHTNESS}"
      xrandr --output "${monitor}" --gamma 1.0:0.88:0.76  --brightness "${BRIGHTNESS}"
    }
    fi
    local -i brightness_nummber=0
    brightness_nummber=$(cut -d\. -f2 <<<"${BRIGHTNESS}")
    echo "brightness_nummber=${BRIGHTNESS}/${brightness_nummber}"
    if [[ -z "${BRIGHTNESS}" ]] ; then
    {
      echo "RETURN 0"
      return 0
    }
    fi
    if [ ${brightness_nummber} -lt 1 ] ; then
    {
      echo "RAN: brightnessctl s 0"
      brightnessctl s 0
      brightnessctl "--device=${_keyboard}" set 0
    }
    elif [ ${brightness_nummber} -ge 1 ] && [ ${brightness_nummber} -lt 10 ] ; then
    {
      echo "RAN: brightnessctl s 750"
      brightnessctl s 750
      brightnessctl "--device=${_keyboard}" set 10%
    }
    elif [ ${brightness_nummber} -ge 10 ] && [ ${brightness_nummber} -lt 20 ] ; then
    {
      echo "ran: brightnessctl s 1425"
      brightnessctl s 1425
      brightnessctl "--device=${_keyboard}" set 20%
    }
    elif [ ${brightness_nummber} -ge 20 ] && [ ${brightness_nummber} -lt 30 ] ; then
    {
      echo "ran: brightnessctl s ${brightness_nummber}%"
      brightnessctl s ${brightness_nummber}%
      brightnessctl "--device=${_keyboard}" set 20%
    }
    elif [ ${brightness_nummber} -ge 30 ] && [ ${brightness_nummber} -lt 40 ] ; then
    {
      echo "ran: brightnessctl s ${brightness_nummber}%"
      brightnessctl s ${brightness_nummber}%
      brightnessctl "--device=${_keyboard}" set 40%
    }
    elif [ ${brightness_nummber} -ge 40 ] && [ ${brightness_nummber} -lt 50 ] ; then
    {
      echo "ran: brightnessctl s ${brightness_nummber}%"
      brightnessctl s ${brightness_nummber}%
      brightnessctl "--device=${_keyboard}" set 50%
    }
    elif [ ${brightness_nummber} -ge 50 ] && [ ${brightness_nummber} -lt 60 ] ; then
    {
      echo "ran: brightnessctl s 1425"
      brightnessctl s 1425
      brightnessctl "--device=${_keyboard}" set 50%
    }
    elif [ ${brightness_nummber} -ge 60 ] && [ ${brightness_nummber} -lt 70 ] ; then
    {
      echo "ran: brightnessctl s ${brightness_nummber}%"
      brightnessctl s ${brightness_nummber}%
      brightnessctl "--device=${_keyboard}" set 0%
    }
    elif [ ${brightness_nummber} -ge 70 ] && [ ${brightness_nummber} -lt 100 ] ; then
    {
      echo "ran: brightnessctl s ${brightness_nummber}%"
      brightnessctl s ${brightness_nummber}%
      brightnessctl "--device=${_keyboard}" set 0%
    }
    elif [ ${brightness_nummber} -ge 100 ] ; then
    {
      echo "ran: brightnessctl s 100%"
      brightnessctl s 100%
      brightnessctl "--device=${_keyboard}" set 0%
    }
    else
    {
      echo brightnessctl set "${_bright_percentage}%"
      brightnessctl "--device=${_keyboard}" set 0%
      # brightnessctl set "${_bright_percentage}%"
      _bright_percentage=$(( _bright_percentage + 30 ))
      _bright_percentage=$(( _bright_percentage * 10 ))

      # brightnessctl s 500
      # brightnessctl s 700
      echo "RAN: brightnessctl s ${_bright_percentage}"
      brightnessctl s ${_bright_percentage}
    }
    fi
  }
  done <<< "${monitors}"
  return 0
} # end _set_brightness

_set_brightness
