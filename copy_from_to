#!/usr/bin/env bash
#!/bin/bash
#
# @author Zeus Intuivo <zeus@intuivo.com>
#
THISSCRIPTNAME=`basename "$0"`

if [[ -z "$1"  ]] || [[ -z "$2"  ]] ; then   # empty value
  echo "

From one folder to another  using batch in subfolders, you don't gets stoped while the computer 'builds' a list
using rsync which is suppoused to be faster at the time I did this (2017)


${THISSCRIPTNAME}   from_path   to_path
  "
    exit 0
fi

if command -v wget >/dev/null 2>&1; then
    echo '.'
else
    echo "wget not found. please install" 
    exit 69
fi

load_execute_command(){
    EXECOMCLI=$(wget --quiet --no-check-certificate https://raw.githubusercontent.com/zeusintuivo/execute_command_intuivo_cli/master/execute_command -O -  2>/dev/null )   # suppress only curl download messages, but keep curl output for variable
    eval """${EXECOMCLI}"""
    ( ( ! command -v type passed >/dev/null 2>&1; ) && echo -e "\n \n  ERROR! Loading execute_command \n \n " && exit 130; )
} # end function load_execute_command
load_execute_command

if command -v anounce >/dev/null 2>&1; then
    echo '.'
else
    echo "anounce not found. Check Your internet connection" 
    exit 69
fi

copy_using_rsync() {
    local FROMPATH="${1}"
    local TOPATH="${2}"
    local filename just_file_name COPY_FROM one_item all_files
    anounce Copy Batch

    all_files=$(find "$FROMPATH" -maxdepth 1 | sed s"$FROMPATH"/g | sed 's/\.\///g' | sed '/^\.$/d' )
    #anounce  Found:"${all_files}"
    #exit
    while read -r one_item; do
    {
        if [ ! -z "${one_item}" ] && [[ "${FROMPATH}/${one_item}" != "${FROMPATH}/${FROMPATH}" ]]; then
        {
            filename=$(escape_filename <<< "${one_item}")
            [ -d "${FROMPATH}/${filename}/" ] && mkdir -p "${TOPATH}/${filename}"
            anounce "${filename}"
            just_file_name=$(echo $(basename "${filename}"))
            if [ -e "${filename}" ] && [ ! -e "${FROMPATH}/${filename}" ]; then
            {
                COPY_FROM="${filename}"
            }
            elif [ ! -e "${filename}" ] && [ -e "${FROMPATH}/${filename}" ]; then
            {
                COPY_FROM="${FROMPATH}/${filename}"
            }
            fi
            anounce_command rsync -av "${COPY_FROM}" "${TOPATH}/"
        }
        fi
    }
    done <<< "${all_files}"
}


copy_using_rsync "${1}" "${2}"

