#!/bin/bash
#
# @author Zeus Intuivo <zeus@intuivo.com>
#
#
load_struct_testing_wget(){
    local provider="/Users/benutzer$HOME/_/clis/execute_command_intuivo_cli/struct_testing"
    [   -e "${provider}"  ] && source "${provider}"
    [ ! -e "${provider}"  ] && eval """$(wget --quiet --no-check-certificate  https://raw.githubusercontent.com/zeusintuivo/execute_command_intuivo_cli/master/struct_testing -O -  2>/dev/null )"""   # suppress only wget download messages, but keep wget output for variable
    ( ( ! command -v type passed >/dev/null 2>&1; ) && echo -e "\n \n  ERROR! Loading struct_testing \n \n " && exit 69; )
} # end load_struct_testing_wget
load_struct_testing_wget

load_execute_command_wget(){
    local provider="/Users/benutzer$HOME/_/clis/execute_command_intuivo_cli/execute_command"
    [   -e "${provider}"  ] && source "${provider}"
    [ ! -e "${provider}"  ] && eval """$(wget --quiet --no-check-certificate  https://raw.githubusercontent.com/zeusintuivo/execute_command_intuivo_cli/master/execute_command -O -  2>/dev/null )"""   # suppress only wget download messages, but keep wget output for variable
    ( ( ! command -v type passed >/dev/null 2>&1; ) && echo -e "\n \n  ERROR! Loading execute_command \n \n " && exit 69; )
} # end load_execute_command_wget
load_execute_command_wget

softlink_create_source_target() {
    local source="${1}"
    local target="${2}"
    anounce_command pwd
    local plus_slash="""${target}/"""
    ensure_unlink "${source}"
    directory_exists_with_spaces "${target}"
    does_not_exist_with_spaces "${source}"
    ln -s """${plus_slash}""" "${source}" 
    softlink_exists_with_spaces "${source}>${plus_slash}" 
}

ensure_link_patched_slashed() {
    local source="${*}"
    anounce_command pwd
    local plus_slash="""${source}/"""
    local patched=$(switch_spaces_to_underscores <<< "${source}")
    ensure_unlink "${patched}"
    directory_exists_with_spaces "${source}"
    does_not_exist_with_spaces "${patched}"
    ln -s """${plus_slash}""" "${patched}" 
    softlink_exists_with_spaces "${patched}>${plus_slash}" 
}

patch_chrome_alone_fix() {
    anounce About to do 2 things:
    anounce   0. Patch Horrible Google Spaced Folder
    anounce   1. Chrome Fail and fix 
    anounce   2. Followup Complete Coherence Fix:
    anounce   - start - 
    say 0. Patch Horrible Google Spaced Folder

    anounce cd /Applications
    cd /Applications
    
    local GOOGLEPATH="Google Chrome.app"
    local GOOGLEPATHPATCHED=$(switch_spaces_to_underscores <<< "${GOOGLEPATH}")
    ensure_link_patched_slashed "${GOOGLEPATH}"
    directory_exists_with_spaces "/Applications/${GOOGLEPATH}"
    softlink_exists "/Applications/${GOOGLEPATHPATCHED}"
    anounce_command ls -la /Applications/ | grep Goo

    say 1. Chrome Fail and fix --

    local GOOGLECONTENTSPATHPATCHED="/Applications/${GOOGLEPATHPATCHED}/Contents"
    say Then I created the folder using sudo:
    ensure_rmdir "${GOOGLECONTENTSPATHPATCHED}/Profile"
    anounce_command ls  -la "${GOOGLECONTENTSPATHPATCHED}"
    echo "#\n" | anounce_command sudo mkdir "${GOOGLECONTENTSPATHPATCHED}/Profile"
    echo "#\n" | sudo chown -R ${USER} "${GOOGLECONTENTSPATHPATCHED}/Profile"
    anounce_command ls  -la "${GOOGLECONTENTSPATHPATCHED}"
    directory_exists "${GOOGLECONTENTSPATHPATCHED}/Profile"
    directory_exists_with_spaces $(realpath "${GOOGLECONTENTSPATHPATCHED}/Profile")
    local GOOGLEPROFILEPATCHED="${GOOGLECONTENTSPATHPATCHED}/Profile"
    local GOOGLE_NATIVE_PATCHED="${GOOGLEPROFILEPATCHED}/NativeMessagingHosts"
    directory_exists_with_spaces "${GOOGLEPROFILEPATCHED}"
    does_not_exist_with_spaces "${GOOGLE_NATIVE_PATCHED}"

    say Then I create the softlink using sudo:

    say 1.1. Patch Application Support Spaced Folder
    anounce cd ${HOME}/Library
    cd ${HOME}/Library
    ensure_link_patched_slashed "Application Support"
    anounce_command pwd
    softlink_exists ${APP_SUPPORT_PATCHED}
    directory_exists_with_spaces ${HOME}/Library/Application Support/Google/Chrome/NativeMessagingHosts
    directory_exists ${NATIVE_SUPPORT_PATCHED}
    softlink_create_source_target ${GOOGLE_NATIVE_PATCHED} ${NATIVE_SUPPORT_PATCHED}
    softlink_exists_with_spaces "/Applications/Google Chrome.app/Contents/Profile/NativeMessagingHosts"
}

function app_support_vars(){
  APP_SUPPORT_PATCHED="${HOME}/Library/ApplicationSupport"
  NATIVE_SUPPORT_PATCHED="${APP_SUPPORT_PATCHED}/Google/Chrome/NativeMessagingHosts"
    
}

app_support_vars

if ( ! softlink_exists ${APP_SUPPORT_PATCHED} ) || ( ! directory_exists ${NATIVE_SUPPORT_PATCHED} ) || ( ! softlink_exists_with_spaces '/Applications/Google Chrome.app/Contents/Profile/NativeMessagingHosts' ) || ( ! directory_exists_with_spaces '/Users/jesusalc/Library/Application Support/Google/Chrome/NativeMessagingHosts/' ) ; then 
{
  patch_chrome_alone_fix
}
fi

say 2. Followup Complete Coherence Fix --- 
say this is intended to run from the /Application/__COHERENCE_APP.app/ folder 
say it will fail if not

mkdir -p Contents/Profile
cd Contents/Profile

ensure_rmdir NativeMessagingHosts
softlink_create_source_target NativeMessagingHosts ${NATIVE_SUPPORT_PATCHED}
